{"ast":null,"code":"var _jsxFileName = \"/Users/prathamesh_shenoy/Desktop/hikingapp/src/pages/TrailDetails/TrailDetails.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrailDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n\n  // Fetch the trail data based on `id` here (you could use a local array or API call)\n  // For now, assume `trails` is an array of trail data you can filter from.\n\n  const trail = featuredTrails.find(trail => trail.id === parseInt(id));\n  if (!trail) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Trail not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: trail.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: trail.image,\n      alt: trail.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Location: \", trail.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Difficulty: \", trail.difficulty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Length: \", trail.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Elevation: \", trail.elevation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TrailDetails, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = TrailDetails;\nexport default TrailDetails;\nvar _c;\n$RefreshReg$(_c, \"TrailDetails\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","TrailDetails","_s","id","trail","featuredTrails","find","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","name","src","image","alt","location","difficulty","length","elevation","_c","$RefreshReg$"],"sources":["/Users/prathamesh_shenoy/Desktop/hikingapp/src/pages/TrailDetails/TrailDetails.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst TrailDetails = () => {\n  const { id } = useParams();\n  \n  // Fetch the trail data based on `id` here (you could use a local array or API call)\n  // For now, assume `trails` is an array of trail data you can filter from.\n\n  const trail = featuredTrails.find(trail => trail.id === parseInt(id));\n\n  if (!trail) return <p>Trail not found</p>;\n\n  return (\n    <div>\n      <h1>{trail.name}</h1>\n      <img src={trail.image} alt={trail.name} />\n      <p>Location: {trail.location}</p>\n      <p>Difficulty: {trail.difficulty}</p>\n      <p>Length: {trail.length}</p>\n      <p>Elevation: {trail.elevation}</p>\n\n      {/* Placeholder for customer reviews */}\n      <section>\n        <h2>Customer Reviews</h2>\n        {/* Render customer reviews here */}\n      </section>\n    </div>\n  );\n};\n\nexport default TrailDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;;EAE1B;EACA;;EAEA,MAAMM,KAAK,GAAGC,cAAc,CAACC,IAAI,CAACF,KAAK,IAAIA,KAAK,CAACD,EAAE,KAAKI,QAAQ,CAACJ,EAAE,CAAC,CAAC;EAErE,IAAI,CAACC,KAAK,EAAE,oBAAOJ,OAAA;IAAAQ,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEzC,oBACEZ,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAKJ,KAAK,CAACS;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBZ,OAAA;MAAKc,GAAG,EAAEV,KAAK,CAACW,KAAM;MAACC,GAAG,EAAEZ,KAAK,CAACS;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CZ,OAAA;MAAAQ,QAAA,GAAG,YAAU,EAACJ,KAAK,CAACa,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCZ,OAAA;MAAAQ,QAAA,GAAG,cAAY,EAACJ,KAAK,CAACc,UAAU;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCZ,OAAA;MAAAQ,QAAA,GAAG,UAAQ,EAACJ,KAAK,CAACe,MAAM;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BZ,OAAA;MAAAQ,QAAA,GAAG,aAAW,EAACJ,KAAK,CAACgB,SAAS;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGnCZ,OAAA;MAAAQ,QAAA,eACER,OAAA;QAAAQ,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACV,EAAA,CA1BID,YAAY;EAAA,QACDH,SAAS;AAAA;AAAAuB,EAAA,GADpBpB,YAAY;AA4BlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}